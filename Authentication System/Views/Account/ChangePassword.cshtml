@model ChangePasswordViewModel

@{
    ViewData["Title"] = "Change password";
    Layout = "~/Views/Shared/_MembershipLayout.cshtml";
}

<h1 class="text-center">Change Password</h1>

<hr />
<div class="row justify-content-center">
    <div class="col-md-6">
        @if (Model.IsSuccess)
        {
            <div class="alert alert-success" role="alert">
                Password updated successfully.<br />
            </div>
        }
        <form asp-action="ChangePassword">
            <div class="form-group mt-3">
                <label asp-for="CurrentPassword" class="control-label"></label>
                <input asp-for="CurrentPassword" class="form-control" />
                <span asp-validation-for="CurrentPassword" class="text-danger"></span>
            </div>
            <div class="form-group mt-3">
                <label asp-for="NewPassword" class="control-label"></label>
                <input asp-for="NewPassword" class="form-control" />
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>
            <div class="form-group mt-3">
                <label asp-for="ConfirmNewPassword" class="control-label"></label>
                <input asp-for="ConfirmNewPassword" class="form-control" />
                <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
            </div>

            <div class="form-group mt-3 d-flex justify-content-center">
                <input type="submit" value="Change password" class="btn btn-primary" />
            </div>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        </form>
    </div>
</div>

@section ValidationScripts{ 
@{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
